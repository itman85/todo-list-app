package com.picoder.sample.todolist.fragment.list

import android.view.LayoutInflater
import android.view.View
import android.view.ViewGroup
import androidx.core.content.ContextCompat
import androidx.navigation.findNavController
import androidx.recyclerview.widget.RecyclerView
import com.picoder.sample.todolist.R
import com.picoder.sample.todolist.data.model.Priority
import com.picoder.sample.todolist.data.model.ToDoData
import com.picoder.sample.todolist.databinding.TodoItemLayoutBinding
import kotlinx.android.synthetic.main.todo_item_layout.view.*

class ListAdapter : RecyclerView.Adapter<ListAdapter.ToDoViewHolder>() {

    // 1. create item layout
    // 2. create view holder
    // 3. create adapter

    var dataList = emptyList<ToDoData>()

    class ToDoViewHolder(private val binding:TodoItemLayoutBinding) : RecyclerView.ViewHolder(binding.root) {
        fun bind(toDoData: ToDoData){
            binding.toDoData = toDoData
            binding.executePendingBindings()
        }
        companion object{
            fun from(parent: ViewGroup):ToDoViewHolder{
                val layoutInflater = LayoutInflater.from(parent.context)
                val binding = TodoItemLayoutBinding.inflate(layoutInflater,parent,false)
                return ToDoViewHolder(binding)
            }
        }
    }

    override fun onCreateViewHolder(parent: ViewGroup, viewType: Int): ToDoViewHolder {
        return ToDoViewHolder.from(parent)
    }

    override fun onBindViewHolder(holder: ToDoViewHolder, position: Int) {
        val currentItem = dataList[position]
        holder.bind(currentItem)
        /*holder.itemView.tvTitle.text = dataList[position].title
        holder.itemView.tvDescription.text = dataList[position].description
        holder.itemView.item_bg.setOnClickListener {
            // ListFragmentDirections will generated by navigation safeargs android plugin
            // currentItem is arguments of UpdateFragment define in app_navigation.xml
            val actionDirection = ListFragmentDirections.actionListFragmentToUpdateFragment(currentItem = dataList[position])
            holder.itemView.findNavController().navigate(actionDirection)
        }
        when (dataList[position].priority) {
            Priority.HIGH -> holder.itemView.priorityIndicator.setCardBackgroundColor(
                ContextCompat.getColor(
                    holder.itemView.context,
                    R.color.red
                )
            )
            Priority.MEDIUM -> holder.itemView.priorityIndicator.setCardBackgroundColor(
                ContextCompat.getColor(
                    holder.itemView.context,
                    R.color.yellow
                )
            )
            Priority.LOW -> holder.itemView.priorityIndicator.setCardBackgroundColor(
                ContextCompat.getColor(
                    holder.itemView.context,
                    R.color.green
                )
            )
        }*/
    }

    override fun getItemCount(): Int {
        return dataList.size
    }

    fun setData(toDoData:List<ToDoData>){
        this.dataList = toDoData
        notifyDataSetChanged()
    }
}